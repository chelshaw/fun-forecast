<Lineal::Fluid class='w-full' data-test-forecast-bar as |width|>
  <svg height={{this.frameHeight}} width={{width}}>
    <defs>
      <clipPath id='outline'>
        <rect
          x='0'
          y={{this.pointOffset}}
          width={{width}}
          height={{this.chartHeight}}
          rx='10'
        />
      </clipPath>
      {{#if this.sky}}
        <linearGradient id='skyGradient'>
          {{#each this.sky as |skyStop|}}
            <stop offset={{skyStop.offset}} stop-color={{skyStop.color}} />
          {{/each}}
        </linearGradient>
      {{/if}}
    </defs>
    <rect
      id='background'
      x='0'
      y={{this.pointOffset}}
      width={{width}}
      height={{this.chartHeight}}
      rx='10'
      class='fill-gray-200'
    />
    {{#if @showSky}}
      <rect
        x='0'
        y='0'
        width={{width}}
        height='30px'
        fill="url('#skyGradient')"
        class='opacity-75'
      ></rect>
    {{/if}}
    {{#let
      (scale-linear range=(array 0 width) domain=this.widthDomain)
      (scale-time range=(array 0 width) domain=this.timeDomain)
      (scale-diverging
        domain=(array 0 this.midpoint 1) range=(color-interpolator)
      )
      as |hourScale timeScale colors|
    }}
      {{#if (and timeScale.isValid hourScale.isValid)}}
        <g id='hours'>
          {{#each this.hours as |hour|}}
            <rect
              width={{round (add (scale-fn-compute hourScale 1) 1)}}
              height={{this.chartHeight}}
              x={{scale-fn-compute timeScale hour.jsDate}}
              y={{this.pointOffset}}
              clip-path='url(#outline)'
              {{style fill=(scale-fn-compute colors hour.score)}}
            />
          {{/each}}
        </g>
        <Lineal::Axis
          @scale={{timeScale}}
          @orientation='bottom'
          @tickValues={{this.ticks}}
          @includeDomain={{false}}
          @tickPadding={{10}}
          @tickFormat={{this.formatTick}}
          @offset={{0}}
          transform='translate(0,{{add this.chartHeight this.pointOffset}})'
          fill='transparent'
          aria-hidden='true'
          class='text-gray-500 text-xs'
        />

        {{#if this.highlighted}}
          <rect
            width='1'
            height='20'
            x={{add
              (scale-fn-compute timeScale this.highlighted.jsDate)
              (div (scale-fn-compute hourScale 1) 2)
            }}
            y='25'
            class='stroke-gray-800 stroke-1'
          />
        {{/if}}
      {{/if}}
      <Lineal::Line
        @data={{@hours}}
        class='stroke-transparent'
        @xScale={{timeScale}}
        @yScale={{hourScale}}
        @x='jsDate'
        @y='hour'
      />
    {{/let}}
  </svg>
</Lineal::Fluid>

{{#if this.highlighted}}
  <div class='border-2 border-gray-800 rounded'>
    <Typography @level='h2'>{{this.highlighted.score}}
      {{this.highlighted.description}}</Typography>
    <Typography @level='h3'>{{this.highlighted.reason}}</Typography>
    <Typography>{{this.highlighted.overview}}</Typography>
    <p>{{this.highlighted.time}}</p>
  </div>
{{/if}}