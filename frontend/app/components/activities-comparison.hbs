<div class='bg-gray-100 dark:bg-gray-900 w-full py-1'>
  <div class='flex items-center justify-between mx-auto max-w-xs'>
    <button
      type='button'
      {{on 'click' (fn this.updateDate -1)}}
      class='bg-yellow-bright drop-shadow rounded p-2'
    >
      <svg
        viewBox='0 0 47 80'
        class='fill-yellow-darkest w-3'
        aria-hidden='true'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          fill-rule='evenodd'
          clip-rule='evenodd'
          d='M2.75375 44.2326C0.415416 41.895 0.415416 38.105 2.75375 35.7674L35.7784 2.7532C38.1167 0.415601 41.9079 0.415602 44.2463 2.7532C46.5846 5.09079 46.5846 8.88078 44.2463 11.2184L15.4555 40L44.2463 68.7816C46.5846 71.1192 46.5846 74.9092 44.2463 77.2468C41.9079 79.5844 38.1167 79.5844 35.7784 77.2468L2.75375 44.2326Z'
        />
      </svg>
    </button>
    <h2 class='text-2xl font-bold text-center'>{{this.relativeWhen}}</h2>
    <button
      type='button'
      {{on 'click' (fn this.updateDate 1)}}
      class='bg-yellow-bright drop-shadow rounded p-2'
    >
      <svg
        class='fill-yellow-darkest w-3'
        viewBox='0 0 47 80'
        aria-label='next day'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          fill-rule='evenodd'
          clip-rule='evenodd'
          d='M44.2463 35.7674C46.5846 38.105 46.5846 41.895 44.2463 44.2326L11.2216 77.2468C8.88327 79.5844 5.09208 79.5844 2.75375 77.2468C0.415415 74.9092 0.415415 71.1192 2.75375 68.7816L31.5445 40L2.75376 11.2184C0.41542 8.88078 0.415421 5.09079 2.75376 2.75319C5.09209 0.415598 8.88328 0.415597 11.2216 2.75319L44.2463 35.7674Z'
        />
      </svg>
    </button>

  </div>
</div>

<div class='flex'>
  <label
    for='customRange1'
    class='mr-2 text-neutral-700 dark:text-neutral-200'
  >Midpoint {{this.midpoint}}</label>
  <input
    type='range'
    class='transparent h-1.5 w-full cursor-pointer appearance-none rounded-lg border-transparent bg-gray-200'
    id='customRange1'
    min='20'
    max='80'
    value={{this.rangeValue}}
    step='5'
    {{on 'change' this.handleRangeChange}}
  />
</div>
{{!-- {{#each @activities as |forecast|}}
  <div class='flex mb-4 gap-y-4'>
    <div class='shrink'>
      <VerbIcon @verb={{forecast.verb}} />
    </div>
    <ForecastBar
      @midpoint={{this.midpoint}}
      @hours={{date-filter forecast.evaluated_hours date='2023-04-30'}}
      @allHours={{true}}
    />
  </div>
{{/each}} --}}

<Lineal::Fluid class='w-full' data-test-activities-comparison as |width|>
  <svg height={{(mult @activities.length 20)}} width={{width}}>
    {{#let
      (scale-ordinal domain=this.verbsDomain range=this.verbsRange)
      (scale-linear range=(array 0 width) domain='0..24')
      (scale-time range=(array 0 width) domain=this.timeDomain)
      (scale-diverging
        domain=(array 0 this.midpoint 1) range=(color-interpolator)
      )
      as |verbScale hourScale timeScale colors|
    }}
      {{#if (and verbScale.isValid timeScale.isValid hourScale.isValid)}}
        <g id='hours'>
          {{#each (date-filter this.hours date=this.currentDate) as |hour|}}
            <text
              class='fill-gray-300 dark:fill-gray-900 font-bold'
              x={{20}}
              y={{scale-fn-compute verbScale hour.verb}}
              text-anchor='start'
            >{{hour.verb}}</text>
            <rect
              width={{round (scale-fn-compute hourScale 1)}}
              height={{20}}
              x={{scale-fn-compute timeScale hour.jsDate}}
              y={{scale-fn-compute verbScale hour.verb}}
              clip-path='url(#outline)'
              {{style fill=(scale-fn-compute colors hour.score)}}
            />
          {{/each}}
        </g>
      {{/if}}
      <Lineal::Axis
        @scale={{timeScale}}
        @orientation='bottom'
        @includeDomain={{false}}
        @tickPadding={{10}}
        @offset={{0}}
        transform='translate(0,0)'
        fill='transparent'
        aria-hidden='true'
        class='text-gray-500 text-xs'
      />
      <Lineal::Line
        @data={{this.hours}}
        class='stroke-blue-bright'
        @xScale={{timeScale}}
        @yScale={{hourScale}}
        @x='jsDate'
        @y='hour'
      />
    {{/let}}
  </svg>
</Lineal::Fluid>